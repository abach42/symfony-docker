version: '3.4'

services:
  db:
    image: ${IMAGES_PREFIX:-}postgres:12
    restart: always
    depends_on:
      - ssh-agent
    environment:
        POSTGRES_PASSWORD: password
        POSTGRES_DB: dbtest
    ports:
        - 15432:5432

  php:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    depends_on:
      - ssh-agent
    volumes:
      - php_socket:/var/run/php
    environment:
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|caddy$$
      # The two next lines can be removed after initial installation
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: ${DATABASE_URL}
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}

  caddy:
    image: ${IMAGES_PREFIX:-}app-caddy
    depends_on:
      php:
        condition: service_healthy
        restart: true
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, caddy:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  ssh-agent:
    build:
      context: ./docker/ssh-agent
      dockerfile: Dockerfile
    volumes:
      - ~/.ssh:/root/.ssh
    environment:
      - SSH_AUTH_SOCK=/tmp/ssh-agent.sock
      - SSH_KEY_NAME=${SSH_KEY_NAME}
    command: >
      /bin/sh -c "eval $(ssh-agent -s) && ssh-add /root/.ssh/${SSH_KEY_NAME} && tail -f /dev/null"

volumes:
  php_socket:
  caddy_data:
  caddy_config: